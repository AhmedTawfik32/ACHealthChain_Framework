// Copyright (c) 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "source/reduce/merge_blocks_reduction_opportunity.h"

#include "source/opt/block_merge_util.h"
#include "source/opt/ir_context.h"

namespace spvtools {
namespace reduce {

MergeBlocksReductionOpportunity::MergeBlocksReductionOpportunity(
    opt::IRContext* context, opt::Function* function, opt::BasicBlock* block) {
  // Precondition: the terminator has to be OpBranch.
  assert(block->terminator()->opcode() == SpvOpBranch);
  context_ = context;
  function_ = function;
  // Get the successor block associated with the OpBranch.
  successor_block_ =
      context->cfg()->block(block->terminator()->GetSingleWordInOperand(0));
}

bool MergeBlocksReductionOpportunity::PreconditionHolds() {
  // Merge block opportunities can disable each other.
  // Examp